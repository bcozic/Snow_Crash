Here, still another binary with a token. After dumping it,
we can see it seeks to read the file and transmits it via a socket on and
given source (second argument) on the port 6969.
However, before trying to open and read the token, the binary checks if the user
have the access to it via the access fuction.
There is a known vulnerability here: one can use a file we own as an argument,
so that access returns that we have the right, and then quickly replace the said file
with a symbolic file we want to read (see exploit.sh in this repo).
We place the said script as /tmp/exploit.sh, ready to be launched.

To get the file, we simply use netcat to listen the 6969 port (with another terminal).

Terminal 1:
$> nc -k -l 6969

Terminal 2:

$> sh /tmp/exploit.sh

Terminal 1:

-> woupa2yuojeeaaed06riuj63c appears after some times (it is a race condition,
so the number of tries may vary).

$> su flag10
$> woupa2yuojeeaaed06riuj63c
$> geflag

We can now get the next flag.
